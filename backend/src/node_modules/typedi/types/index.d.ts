/**
 * We have a hard dependency on reflect-metadata package.
 * Without the dependency lookup wont work. So we should warn the users
 * when it's not loaded.
 */
import { Container } from 'typedi/types/container.class';
export * from 'typedi/types/decorators/inject-many.decorator';
export * from 'typedi/types/decorators/inject.decorator';
export * from 'typedi/types/decorators/service.decorator';
export * from 'typedi/types/error/cannot-inject-value.error';
export * from 'typedi/types/error/cannot-instantiate-value.error';
export * from 'typedi/types/error/service-not-found.error';
export { Handler } from 'typedi/types/interfaces/handler.interface';
export { ServiceMetadata } from 'typedi/types/interfaces/service-metadata.interface';
export { ServiceOptions } from 'typedi/types/interfaces/service-options.interface';
export { Constructable } from 'typedi/types/types/constructable.type';
export { ServiceIdentifier } from 'typedi/types/types/service-identifier.type';
export { ContainerInstance } from 'typedi/types/container-instance.class';
export { Container } from 'typedi/types/container.class';
export { Token } from 'typedi/types/token.class';
export default Container;
